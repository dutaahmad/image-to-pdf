/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, PerspectiveCamera } from "@react-three/drei";

function Model(props: any) {
    const { nodes, materials } = useGLTF("/CUBE.gltf");
    return (
        <group {...props} dispose={null}>
            <group rotation={[-Math.PI / 2, 0, 0]} scale={props.scale}>
                <mesh
                    castShadow
                    receiveShadow
                    // @ts-ignore
                    geometry={nodes.Cube_1.geometry}
                    material={materials.Material}
                />
                <mesh
                    castShadow
                    receiveShadow
                    // @ts-ignore
                    geometry={nodes.Cube_2.geometry}
                    material={materials["Material.001"]}
                />
            </group>
            <PerspectiveCamera
                makeDefault={false}
                far={10000}
                near={10}
                fov={39.598}
                position={[735.889, 495.831, 692.579]}
                rotation={[-Math.PI, 0.756, 2.68]}
                scale={100}
            />
        </group>
    );
}

useGLTF.preload("/CUBE.gltf");

export default Model;
